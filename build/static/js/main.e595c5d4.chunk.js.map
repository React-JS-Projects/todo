{"version":3,"sources":["components/left/AppHeader.js","actions/types.js","actions/createNewList.js","components/left/CreateList.js","actions/clickList.js","components/left/Lists.js","components/left/Left.js","actions/addTask.js","actions/completeTask.js","actions/removeTask.js","components/middle/TaskItem.js","components/middle/Tasks.js","components/middle/Middle.js","components/right/Progress.js","components/right/Right.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["AppHeader","className","this","props","appName","userName","React","Component","types","CREATE_NEW_LIST","CLICK_LIST","ADD_TASK","COMPLETE_TASK","REMOVE_TASK","createNewList","payload","type","data","CreateList","bind","listNameBox","createRef","newListName","value","newListPayload","name","pendingItems","completedItems","created","Date","toDateString","dispatch","ref","onClick","connect","state","clickList","Lists","onListClick","e","clickListPayload","clickedListId","target","getAttribute","listItems","lists","map","list","index","key","data-index","length","Fragment","Left","addTask","completeTask","removeTask","PendingTaskItem","taskValue","checked","data-id","CompletedTaskItem","Tasks","taskName","trim","addTaskPayload","listId","task","toString","taskId","completeTaskPayload","console","log","parentElement","removeTaskPayload","visible","bindCompleteTask","bindRemoveTask","id","placeholder","Middle","Progress","totalCount","pendingCount","totalTasks","Right","App","Boolean","window","location","hostname","match","defaultState","localStorage","getItem","JSON","parse","reducer","action","newState","produce","draft","push","filter","item","setItem","stringify","store","createStore","compose","applyMiddleware","logger","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iQAiBeA,E,uKAXb,OACC,yBAAKC,UAAU,OACd,yBAAKA,UAAU,aACd,4BAAKC,KAAKC,MAAMC,SAChB,yCAAeF,KAAKC,MAAME,gB,GARPC,IAAMC,W,cCOfC,EARf,CACCC,gBAAiB,kBACjBC,WAAY,aACZC,SAAU,WACVC,cAAe,gBACfC,YAAa,eCICC,MARf,SAAuBC,GAEtB,MAAO,CACNC,KAAOR,EAAMC,gBACbQ,KAAMF,ICFFG,E,kDAEL,WAAYf,GACX,IAAD,8BACC,cAAMA,IAEDW,cAAgB,EAAKA,cAAcK,KAAnB,gBAGrB,EAAKC,YAAcd,IAAMe,YAN1B,E,4DAWC,IAAIC,EAAcpB,KAAKkB,YAAYG,MAEnCrB,KAAKkB,YAAYG,MAAQ,GAEzB,IAAIC,EACJ,CACCC,KAAMH,EACNI,aAAc,GACdC,eAAgB,GAChBC,SAAU,IAAIC,MAAOC,gBAGtB5B,KAAKC,MAAM4B,SAASjB,EAAcU,M,+BAIlC,IAAD,OACC,OACC,yBAAKvB,UAAU,OACd,yBAAKA,UAAU,aACd,2BAAOe,KAAK,OAAOf,UAAU,eAAe+B,IAAK,SAAAT,GAAK,OAAI,EAAKH,YAAcG,KAC7E,4BAAQP,KAAK,SAASf,UAAU,yBAAyBgC,QAAS/B,KAAKY,eAAvE,qB,GAnCoBR,IAAMC,WAiDhB2B,mBAPf,SAAyBC,GAExB,MAAO,KAKOD,CAAyBhB,GC3CzBkB,MARf,SAAmBrB,GAElB,MAAO,CACNC,KAAOR,EAAME,WACbO,KAAMF,I,OCDFsB,E,kDAEL,WAAYlC,GACX,IAAD,8BACC,cAAMA,IAEDmC,YAAc,EAAKA,YAAYnB,KAAjB,gBAHpB,E,wDAMYoB,GAEX,IAEIC,EACJ,CACCC,cAJmBF,EAAEG,OAAOC,aAAa,eAO1CzC,KAAKC,MAAM4B,SAASK,EAAUI,M,+BAK9B,IAAIF,EAAcpC,KAAKoC,YAAYnB,KAAKjB,MAEpC0C,EAAY1C,KAAKC,MAAM0C,MAAMC,KAAI,SAASC,EAAMC,GAEnD,OACA,wBAAI/C,UAAU,4BAA4BgD,IAAKD,EAAOE,aAAYF,EAAOf,QAASK,GACjF,kBAAC,IAAD,CAAWY,aAAYF,IADxB,SAC0CD,EAAKtB,KAAK,0BAAMyB,aAAYF,EAAO/C,UAAU,mBAAmB8C,EAAKrB,aAAayB,YAK7H,OACC,kBAAC,IAAMC,SAAP,KACA,6BACA,qCACA,wBAAInD,UAAU,cAEb2C,Q,GAxCgBtC,IAAMC,WAuDX2B,mBAPf,SAAyBC,GAExB,MAAO,CACNU,MAAOV,EAAMU,SAIAX,CAAyBG,GCzCzBgB,E,uKAVb,OACC,kBAAC,IAAMD,SAAP,KACC,kBAAC,EAAD,CAAWhD,QAAQ,QAAQC,SAAS,QACpC,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAReC,IAAMC,WCKV+C,MARf,SAAiBvC,GAEhB,MAAO,CACNC,KAAOR,EAAMG,SACbM,KAAMF,ICIOwC,MARf,SAAsBxC,GAErB,MAAO,CACNC,KAAOR,EAAMI,cACbK,KAAMF,ICIOyC,MARf,SAAoBzC,GAEnB,MAAO,CACNC,KAAOR,EAAMK,YACbI,KAAMF,ICHK0C,EAAb,uKAIE,IAAIC,EAAYxD,KAAKC,MAAMwD,QAAS,0BAAM1D,UAAU,aAAaC,KAAKC,MAAMoB,OAAgBrB,KAAKC,MAAMoB,MAEvG,OACC,wBAAItB,UAAU,2BAA2B2D,UAAS1D,KAAKC,MAAM6C,MAAOC,IAAK/C,KAAKC,MAAM6C,OACnF,yBAAK/C,UAAU,OACd,yBAAKA,UAAU,YACd,2BAAOe,KAAK,WAAW4C,UAAS1D,KAAKC,MAAM6C,MAAOf,QAAS/B,KAAKC,MAAMoD,aAAcI,QAASzD,KAAKC,MAAMwD,WAEzG,yBAAK1D,UAAU,aAEdyD,EAED,2BAAG,0BAAMzD,UAAU,gBAAgBC,KAAKC,MAAMyB,WAE9C,yBAAK3B,UAAU,WAAW2D,UAAS1D,KAAKC,MAAM6C,OAC7C,kBAAC,IAAD,CAASY,UAAS1D,KAAKC,MAAM6C,MAAOf,QAAS/B,KAAKC,MAAMqD,oBAnB9D,GAAqClD,IAAMC,WA2B9BsD,EAAb,uKAIE,IAAIH,EAAYxD,KAAKC,MAAMwD,QAAS,0BAAM1D,UAAU,aAAaC,KAAKC,MAAMoB,OAAgBrB,KAAKC,MAAMoB,MAEvG,OACC,wBAAItB,UAAU,2BAA2B2D,UAAS1D,KAAKC,MAAM6C,MAAOC,IAAK/C,KAAKC,MAAM6C,OACnF,yBAAK/C,UAAU,OACd,yBAAKA,UAAU,YACd,2BAAOe,KAAK,WAAW4C,UAAS1D,KAAKC,MAAM6C,MAAOf,QAAS/B,KAAKC,MAAMoD,aAAcI,QAASzD,KAAKC,MAAMwD,WAEzG,yBAAK1D,UAAU,aAEdyD,EAED,2BAAG,0BAAMzD,UAAU,gBAAgBC,KAAKC,MAAMyB,iBAhBnD,GAAuCtB,IAAMC,WCpBvCuD,E,kDAEL,WAAY3D,GACX,IAAD,8BACC,cAAMA,IAEDmD,QAAU,EAAKA,QAAQnC,KAAb,gBACf,EAAKoC,aAAe,EAAKA,aAAapC,KAAlB,gBACpB,EAAKqC,WAAa,EAAKA,WAAWrC,KAAhB,gBAGlB,EAAK4C,SAAWzD,IAAMe,YARvB,E,sDAaC,GAAmC,KAA/BnB,KAAK6D,SAASxC,MAAMyC,OAAxB,CAKA,IAAIC,EACJ,CACCC,OAAQhE,KAAKC,MAAM+D,OACnBC,KACA,CACC1C,KAAMvB,KAAK6D,SAASxC,MACpBK,SAAS,IAAIC,MAAOuC,aAKtBlE,KAAK6D,SAASxC,MAAQ,GAEtBrB,KAAKC,MAAM4B,SAASuB,EAAQW,O,mCAGhB1B,GAEZ,IAAI8B,EAAS9B,EAAEG,OAAOC,aAAa,WAE/B2B,EACJ,CACCJ,OAAQhE,KAAKC,MAAM+D,OACnBG,OAAQA,EACRF,KACA,CACC1C,KAAMvB,KAAKC,MAAMuB,aAAa2C,GAAQ5C,KACtCG,SAAS,IAAIC,MAAOC,iBAItB5B,KAAKC,MAAM4B,SAASwB,EAAae,M,iCAGvB/B,GAEVgC,QAAQC,IAAIjC,EAAEG,QAEd,IAAI2B,EAAS9B,EAAEG,OAAO+B,cAAc9B,aAAa,WAE7C+B,EACJ,CACCR,OAAQhE,KAAKC,MAAM+D,OACnBG,OAAQA,GAGTE,QAAQC,IAAIE,GAEZxE,KAAKC,MAAM4B,SAASyB,EAAWkB,M,+BAI/B,IAAD,OAIC,GAHAH,QAAQC,IAAI,iBACZD,QAAQC,IAAItE,KAAKC,QAEU,IAAvBD,KAAKC,MAAMwE,QACf,CACCJ,QAAQC,IAAI,gBAEZ,IAAII,EAAmB1E,KAAKqD,aAAapC,KAAKjB,MAC1C2E,EAAiB3E,KAAKsD,WAAWrC,KAAKjB,MAEtCwB,EAAexB,KAAKC,MAAMuB,aAAaoB,KAAI,SAASqB,EAAMnB,GAE7D,OACC,kBAAC,EAAD,CAAiBzB,MAAO4C,EAAK1C,KAAMG,QAASuC,EAAKvC,QAASoB,MAAOA,EAAOO,aAAcqB,EAAkBpB,WAAYqB,EAAgBlB,SAAS,OAI3IhC,EAAiBzB,KAAKC,MAAMwB,eAAemB,KAAI,SAASqB,EAAMnB,GAEjE,OACC,kBAAC,EAAD,CAAmBzB,MAAO4C,EAAK1C,KAAMG,QAASuC,EAAKvC,QAASoB,MAAOA,EAAOW,SAAS,OAIrF,OACC,kBAAC,IAAMP,SAAP,KAEC,yBAAKnD,UAAU,OACd,yBAAKA,UAAU,aACd,wBAAI6E,GAAG,YAAY5E,KAAKC,MAAMsB,MAC9B,2BAAG,kBAAC,IAAD,MAAH,QAAyBvB,KAAKC,MAAMyB,WAItC,yBAAK3B,UAAU,OACd,yBAAKA,UAAU,aACd,yBAAKA,UAAU,eACd,2BAAO8E,YAAY,gBAAgB/D,KAAK,OAAOf,UAAU,eAAe+B,IAAK,SAAAT,GAAK,OAAI,EAAKwC,SAAWxC,KACtG,yBAAKtB,UAAU,sBACd,4BAAQe,KAAK,SAASf,UAAU,kBAAkBgC,QAAS/B,KAAKoD,SAAhE,gBAMJ,6BAEA,yBAAKrD,UAAU,OACd,yBAAKA,UAAU,aACd,4BAAI,uCACJ,wBAAIA,UAAU,cAAcyB,KAI9B,6BAAM,6BAEN,yBAAKzB,UAAU,OACd,yBAAKA,UAAU,aACd,4BAAI,yCACJ,wBAAIA,UAAU,cAAc0B,MAShC,OACC,iE,GA/IgBrB,IAAMC,WAgLX2B,mBA3Bf,SAAyBC,GAIxB,OAFAoC,QAAQC,IAAIrC,GAEgB,OAAxBA,EAAMM,eAET8B,QAAQC,IAAI,gBACZD,QAAQC,IAAIrC,EAAMU,MAAMV,EAAMM,gBAEvB,CACNkC,QAAiC,OAAxBxC,EAAMM,cACfyB,OAAQ/B,EAAMM,cACdhB,KAAMU,EAAMU,MAAMV,EAAMM,eAAehB,KACvCG,QAASO,EAAMU,MAAMV,EAAMM,eAAeb,QAC1CF,aAAcS,EAAMU,MAAMV,EAAMM,eAAef,aAC/CC,eAAgBQ,EAAMU,MAAMV,EAAMM,eAAed,kBAKlD4C,QAAQC,IAAI,kBACL,CACNG,QAAiC,OAAxBxC,EAAMM,kBAKHP,CAAyB4B,GC7KzBkB,E,uKANb,OACC,kBAAC,EAAD,U,GALkB1E,IAAMC,WCArB0E,E,uKAIJ,OACC,kBAAC,IAAM7B,SAAP,KACC,uCACA,6BACA,4CAAkBlD,KAAKC,MAAM+E,YAC7B,8CAAoBhF,KAAKC,MAAMgF,mB,GATZ7E,IAAMC,WAgCd2B,mBAjBf,SAAyBC,GAExB,IAAIiD,EAAa,EACb1D,EAAe,EAQnB,MAN4B,OAAxBS,EAAMM,eAAkD,OAAxBN,EAAMM,gBAEzC2C,EAAajD,EAAMU,MAAMV,EAAMM,eAAef,aAAayB,OAAShB,EAAMU,MAAMV,EAAMM,eAAed,eAAewB,OACpHzB,EAAeS,EAAMU,MAAMV,EAAMM,eAAef,aAAayB,QAGvD,CACN+B,WAAYE,EACZD,aAAczD,KAIDQ,CAAyB+C,GCpBzBI,E,uKARb,OACC,kBAAC,IAAMjC,SAAP,KACC,kBAAC,EAAD,W,GANgB9C,IAAMC,WCqBX+E,MAlBf,WACE,OACD,yBAAKrF,UAAU,mBACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,WAAW6E,GAAG,QAC5B,kBAAC,EAAD,OAED,yBAAK7E,UAAU,WAAW6E,GAAG,UAC5B,kBAAC,EAAD,OAED,yBAAK7E,UAAU,WAAW6E,GAAG,SAC5B,kBAAC,EAAD,UCLgBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mDCfFC,EACJ,CACCnD,cAAe,KACfI,MAAO,IAG8B,OAAlCgD,aAAaC,QAAQ,WAExBF,EAAeG,KAAKC,MAAMH,aAAaC,QAAQ,WAmDjCG,MAhDf,WACC,IADgB9D,EACjB,uDADyByD,EAAcM,EACvC,uCACKC,EAAW,GAEf,OAAOD,EAAOlF,MAEb,KAAKR,EAAMC,gBACV0F,EAAQ,2BACJhE,GADI,IAEPU,MAAM,GAAD,mBAAMV,EAAMU,OAAZ,CAAmBqD,EAAOjF,SAC9B,MACH,KAAKT,EAAME,WACVyF,EAAQ,2BACJhE,GADI,IAEPM,cAAeyD,EAAOjF,KAAKwB,gBAC1B,MACH,KAAKjC,EAAMG,SACVwF,EAAWC,YAAQjE,GAAO,SAAAkE,GAEzBA,EAAMxD,MAAMV,EAAMM,eAAef,aAAa4E,KAAKJ,EAAOjF,KAAKkD,SAC7D,MACJ,KAAK3D,EAAMI,cACVuF,EAAWC,YAAQjE,GAAO,SAAAkE,GAEzBA,EAAMxD,MAAMV,EAAMM,eAAed,eAAe2E,KAAKJ,EAAOjF,KAAKkD,MACjEkC,EAAMxD,MAAMV,EAAMM,eAAef,aAAe2E,EAAMxD,MAAMV,EAAMM,eAAef,aAAa6E,QAAO,SAASC,EAAMxD,GAEnH,OAAOA,EAAMoB,aAAe8B,EAAOjF,KAAKoD,aAGvC,MACJ,KAAK7D,EAAMK,YACVsF,EAAWC,YAAQjE,GAAO,SAAAkE,GAEzBA,EAAMxD,MAAMV,EAAMM,eAAef,aAAe2E,EAAMxD,MAAMV,EAAMM,eAAef,aAAa6E,QAAO,SAASC,EAAMxD,GAEnH,OAAOA,EAAMoB,aAAe8B,EAAOjF,KAAKoD,aAGvC,MACJ,QACC,OAAOlC,EAIT,OADA0D,aAAaY,QAAQ,QAASV,KAAKW,UAAUP,IACtCA,G,QCpDOQ,EAFHC,sBAAYX,EAASY,kBAAQC,0BAAgBC,KAASC,kCCGlEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACD,kBAAC,IAAD,CAAUR,MAAOA,GAChB,kBAAC,EAAD,QAGAS,SAASC,eAAe,SHqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtD,QAAQsD,MAAMA,EAAMC,c","file":"static/js/main.e595c5d4.chunk.js","sourcesContent":["import React from 'react';\n\nclass AppHeader extends React.Component\n{\n\trender()\n\t{\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t<h1>{this.props.appName}</h1>\n\t\t\t\t\t<p>Hey there, {this.props.userName}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AppHeader;","const types = \n{\n\tCREATE_NEW_LIST: \"CREATE_NEW_LIST\",\n\tCLICK_LIST: \"CLICK_LIST\",\n\tADD_TASK: \"ADD_TASK\",\n\tCOMPLETE_TASK: \"COMPLETE_TASK\",\n\tREMOVE_TASK: \"REMOVE_TASK\"\n};\n\nexport default types;","import types from \"./types\";\n\nfunction createNewList(payload)\n{\n\treturn {\n\t\ttype:  types.CREATE_NEW_LIST,\n\t\tdata: payload\n\t}\n}\n\nexport default createNewList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport createNewList from '../../actions/createNewList';\n\nclass CreateList extends React.Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\n\t\tthis.createNewList = this.createNewList.bind(this);\n\n\t\t// Refs\n\t\tthis.listNameBox = React.createRef();\n\t}\n\n\tcreateNewList()\n\t{\n\t\tvar newListName = this.listNameBox.value;\n\n\t\tthis.listNameBox.value = \"\";\n\n\t\tvar newListPayload = \n\t\t{\n\t\t\tname: newListName,\n\t\t\tpendingItems: [],\n\t\t\tcompletedItems: [],\n\t\t\tcreated:  new Date().toDateString()\n\t\t};\n\n\t\tthis.props.dispatch(createNewList(newListPayload));\n\t}\n\n\trender()\n\t{\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" ref={value => this.listNameBox = value} />\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-success btn-sm\" onClick={this.createNewList}>Create List</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state)\n{\n\treturn {\n\t\t\n\t}\n}\n\nexport default connect(mapStateToProps)(CreateList);","import types from \"./types\";\n\nfunction clickList(payload)\n{\n\treturn {\n\t\ttype:  types.CLICK_LIST,\n\t\tdata: payload\n\t}\n}\n\nexport default clickList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport clickList from '../../actions/clickList';\nimport { FaListAlt } from 'react-icons/fa';\n\nclass Lists extends React.Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\n\t\tthis.onListClick = this.onListClick.bind(this);\n\t}\t\n\n\tonListClick(e)\n\t{\t\t\n\t\tlet clickedListId = e.target.getAttribute(\"data-index\");\n\n\t\tlet clickListPayload = \n\t\t{\n\t\t\tclickedListId: clickedListId\n\t\t};\n\n\t\tthis.props.dispatch(clickList(clickListPayload));\n\t}\n\n\trender()\n\t{\n\t\tvar onListClick = this.onListClick.bind(this);\n\n\t\tvar listItems = this.props.lists.map(function(list, index)\n\t\t{\n\t\t\treturn (\n\t\t\t<li className=\"list-group-item listItems\" key={index} data-index={index} onClick={onListClick}>\n\t\t\t\t<FaListAlt data-index={index} /> &nbsp; {list.name}<span data-index={index} className=\"listItemSummary\">{list.pendingItems.length}</span>\n\t\t\t</li>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t<br />\n\t\t\t<h3>Lists</h3>\t\t\t\n\t\t\t<ul className=\"list-group\">\n\t\t\t{\n\t\t\t\tlistItems\n\t\t\t}\n\t\t\t</ul>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state)\n{\n\treturn {\n\t\tlists: state.lists\n\t}\n}\n\nexport default connect(mapStateToProps)(Lists);","import React from 'react';\nimport AppHeader from './AppHeader';\nimport CreateList from './CreateList';\nimport Lists from './Lists';\n\nclass Left extends React.Component\n{\n\trender()\n\t{\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<AppHeader appName=\"ToDo!\" userName=\"You\" />\n\t\t\t\t<CreateList />\n\t\t\t\t<Lists />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Left;","import types from \"./types\";\n\nfunction addTask(payload)\n{\n\treturn {\n\t\ttype:  types.ADD_TASK,\n\t\tdata: payload\n\t}\n}\n\nexport default addTask;","import types from \"./types\";\n\nfunction completeTask(payload)\n{\n\treturn {\n\t\ttype:  types.COMPLETE_TASK,\n\t\tdata: payload\n\t}\n}\n\nexport default completeTask;","import types from \"./types\";\n\nfunction removeTask(payload)\n{\n\treturn {\n\t\ttype:  types.REMOVE_TASK,\n\t\tdata: payload\n\t}\n}\n\nexport default removeTask;","import React from 'react';\nimport { FaTrash } from 'react-icons/fa';\n\nexport class PendingTaskItem extends React.Component\n{\n\trender() \n\t{\n\t\tvar taskValue = this.props.checked? <span className=\"taskValue\">{this.props.value}</span> : this.props.value;\n\n\t\treturn (\n\t\t\t<li className=\"list-group-item taskItem\" data-id={this.props.index} key={this.props.index}>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-1\">\n\t\t\t\t\t\t<input type=\"checkbox\" data-id={this.props.index} onClick={this.props.completeTask} checked={this.props.checked} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-lg-10\">\n\t\t\t\t\t{\n\t\t\t\t\t\ttaskValue\n\t\t\t\t\t}\n\t\t\t\t\t<p><span className=\"taskItemDate\">{this.props.created}</span></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-lg-1\" data-id={this.props.index}>\n\t\t\t\t\t\t<FaTrash data-id={this.props.index} onClick={this.props.removeTask} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nexport class CompletedTaskItem extends React.Component\n{\n\trender() \n\t{\n\t\tvar taskValue = this.props.checked? <span className=\"taskValue\">{this.props.value}</span> : this.props.value;\n\n\t\treturn (\n\t\t\t<li className=\"list-group-item taskItem\" data-id={this.props.index} key={this.props.index}>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-1\">\n\t\t\t\t\t\t<input type=\"checkbox\" data-id={this.props.index} onClick={this.props.completeTask} checked={this.props.checked} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-lg-10\">\n\t\t\t\t\t{\n\t\t\t\t\t\ttaskValue\n\t\t\t\t\t}\n\t\t\t\t\t<p><span className=\"taskItemDate\">{this.props.created}</span></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t)\n\t}\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport addTask from \"../../actions/addTask\";\nimport completeTask from \"../../actions/completeTask\";\nimport removeTask from \"../../actions/removeTask\";\n\nimport { PendingTaskItem, CompletedTaskItem } from './TaskItem';\nimport { FaRegClock } from 'react-icons/fa';\n\nclass Tasks extends React.Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\n\t\tthis.addTask = this.addTask.bind(this);\n\t\tthis.completeTask = this.completeTask.bind(this);\n\t\tthis.removeTask = this.removeTask.bind(this);\n\n\t\t// Refs\n\t\tthis.taskName = React.createRef();\n\t}\n\n\taddTask()\n\t{\n\t\tif (this.taskName.value.trim() === \"\")\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tlet addTaskPayload = \n\t\t{\n\t\t\tlistId: this.props.listId,\n\t\t\ttask: \n\t\t\t{\n\t\t\t\tname: this.taskName.value,\n\t\t\t\tcreated: new Date().toString()\n\t\t\t}\n\t\t}\n\n\t\t// Resetting the task box\n\t\tthis.taskName.value = \"\";\n\n\t\tthis.props.dispatch(addTask(addTaskPayload));\n\t}\n\n\tcompleteTask(e)\n\t{\t\t\n\t\tvar taskId = e.target.getAttribute(\"data-id\");\n\n\t\tlet completeTaskPayload = \n\t\t{\n\t\t\tlistId: this.props.listId,\n\t\t\ttaskId: taskId,\n\t\t\ttask: \n\t\t\t{\n\t\t\t\tname: this.props.pendingItems[taskId].name,\n\t\t\t\tcreated: new Date().toDateString()\n\t\t\t}\n\t\t}\n\n\t\tthis.props.dispatch(completeTask(completeTaskPayload));\n\t}\n\n\tremoveTask(e)\n\t{\n\t\tconsole.log(e.target);\n\n\t\tvar taskId = e.target.parentElement.getAttribute(\"data-id\");\n\n\t\tlet removeTaskPayload = \n\t\t{\n\t\t\tlistId: this.props.listId,\n\t\t\ttaskId: taskId\n\t\t}\n\n\t\tconsole.log(removeTaskPayload);\n\n\t\tthis.props.dispatch(removeTask(removeTaskPayload));\n\t}\n\n\trender()\n\t{\n\t\tconsole.log(\"CALLING PROPS\");\n\t\tconsole.log(this.props);\n\n\t\tif (this.props.visible !== false)\n\t\t{\n\t\t\tconsole.log(\"inside false\");\n\n\t\t\tvar bindCompleteTask = this.completeTask.bind(this);\n\t\t\tvar bindRemoveTask = this.removeTask.bind(this);\n\n\t\t\tvar pendingItems = this.props.pendingItems.map(function(task, index)\n\t\t\t{\n\t\t\t\treturn (\n\t\t\t\t\t<PendingTaskItem value={task.name} created={task.created} index={index} completeTask={bindCompleteTask} removeTask={bindRemoveTask} checked={false} />\n\t\t\t\t)\n\t\t\t});\n\n\t\t\tvar completedItems = this.props.completedItems.map(function(task, index)\n\t\t\t{\n\t\t\t\treturn (\n\t\t\t\t\t<CompletedTaskItem value={task.name} created={task.created} index={index} checked={true} />\n\t\t\t\t)\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-lg-12\">\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h1 id=\"listName\">{this.props.name}</h1>\n\t\t\t\t\t\t\t<p><FaRegClock /> &nbsp;{this.props.created}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-lg-12\">\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"input-group\">\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<input placeholder=\"I have to ...\" type=\"text\" className=\"form-control\" ref={value => this.taskName = value} />\n\t\t\t\t\t\t\t\t<div className=\"input-group-append\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={this.addTask}>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t<h3><b>Pending</b></h3>\n\t\t\t\t\t\t\t<ul className=\"list-group\">{pendingItems}</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<br /><br />\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t<h3><b>Completed</b></h3>\n\t\t\t\t\t\t\t<ul className=\"list-group\">{completedItems}</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn (\n\t\t\t\t<h1>Let's start adding some tasks</h1>\n\t\t\t);\n\t\t}\n\t}\n}\n\nfunction mapStateToProps(state)\n{\n\tconsole.log(state);\n\n\tif (state.clickedListId !== \"-1\")\n\t{\n\t\tconsole.log(\"clikced here\");\n\t\tconsole.log(state.lists[state.clickedListId]);\n\n\t\treturn {\n\t\t\tvisible: state.clickedListId === \"-1\" ? false: true,\n\t\t\tlistId: state.clickedListId,\n\t\t\tname: state.lists[state.clickedListId].name,\n\t\t\tcreated: state.lists[state.clickedListId].created,\n\t\t\tpendingItems: state.lists[state.clickedListId].pendingItems,\n\t\t\tcompletedItems: state.lists[state.clickedListId].completedItems,\t\t\t\n\t\t}\n\t}\n\telse \n\t{\n\t\tconsole.log(\"clikced here 2\");\n\t\treturn {\n\t\t\tvisible: state.clickedListId === \"-1\" ? false: true,\t\t\t\t\t\t\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps)(Tasks);","import React from 'react';\nimport Tasks from './Tasks';\n\nclass Middle extends React.Component\n{\n\trender()\n\t{\n\t\treturn (\t\t\t\n\t\t\t<Tasks />\t\t\t\n\t\t);\n\t}\n}\n\nexport default Middle;","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass Progress extends React.Component\n{\n\trender()\n\t{\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h2>Summary</h2>\n\t\t\t\t<hr />\n\t\t\t\t<h5>Total Tasks: {this.props.totalCount}</h5>\n\t\t\t\t<h5>Pending Tasks: {this.props.pendingCount}</h5>\t\t\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state)\n{\n\tvar totalTasks = 0;\n\tvar pendingItems = 0;\n\n\tif (state.clickedListId !== \"-1\" && state.clickedListId !== null)\n\t{\n\t\ttotalTasks = state.lists[state.clickedListId].pendingItems.length + state.lists[state.clickedListId].completedItems.length;\n\t\tpendingItems = state.lists[state.clickedListId].pendingItems.length;\t\t\n\t}\n\n\treturn {\n\t\ttotalCount: totalTasks,\n\t\tpendingCount: pendingItems\n\t}\n}\n\nexport default connect(mapStateToProps)(Progress);","import React from 'react';\nimport Progress from './Progress';\n\nclass Right extends React.Component\n{\n\trender()\n\t{\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Progress />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Right;","import React from 'react';\nimport './App.css';\nimport Left from './components/left/Left';\nimport Middle from './components/middle/Middle';\nimport Right from './components/right/Right';\n\nfunction App() {\n  return (\n\t<div className=\"container-fluid\">\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-lg-2\" id=\"left\">\n\t\t\t\t<Left />\n\t\t\t</div>\n\t\t\t<div className=\"col-lg-8\" id=\"middle\">\n\t\t\t\t<Middle />\n\t\t\t</div>\n\t\t\t<div className=\"col-lg-2\" id=\"right\">\n\t\t\t\t<Right />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import types from \"../actions/types\";\nimport produce from 'immer';\n\nlet defaultState = \n{\n\tclickedListId: \"-1\",\n\tlists: []\n}\n\nif (localStorage.getItem(\"state\") !== null)\n{\n\tdefaultState = JSON.parse(localStorage.getItem(\"state\"));\n}\n\nfunction reducer(state = defaultState, action)\n{\n\tlet newState = {};\n\n\tswitch(action.type)\n\t{\n\t\tcase types.CREATE_NEW_LIST:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlists: [...state.lists, action.data]\n\t\t\t};break;\n\t\tcase types.CLICK_LIST: \n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tclickedListId: action.data.clickedListId\n\t\t\t};break;\n\t\tcase types.ADD_TASK:\n\t\t\tnewState = produce(state, draft => \n\t\t\t{\n\t\t\t\tdraft.lists[state.clickedListId].pendingItems.push(action.data.task);\t\n\t\t\t});break;\n\t\tcase types.COMPLETE_TASK: \n\t\t\tnewState = produce(state, draft => \n\t\t\t{\n\t\t\t\tdraft.lists[state.clickedListId].completedItems.push(action.data.task);\n\t\t\t\tdraft.lists[state.clickedListId].pendingItems = draft.lists[state.clickedListId].pendingItems.filter(function(item, index)\n\t\t\t\t{\n\t\t\t\t\treturn index.toString() !== action.data.taskId;\n\t\t\t\t});\n\n\t\t\t});break;\n\t\tcase types.REMOVE_TASK: \n\t\t\tnewState = produce(state, draft => \n\t\t\t{\t\t\t\t\n\t\t\t\tdraft.lists[state.clickedListId].pendingItems = draft.lists[state.clickedListId].pendingItems.filter(function(item, index)\n\t\t\t\t{\n\t\t\t\t\treturn index.toString() !== action.data.taskId;\n\t\t\t\t});\n\n\t\t\t});break;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\n\tlocalStorage.setItem(\"state\", JSON.stringify(newState));\n\treturn newState;\n}\n\nexport default reducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport reducer from '../reducers/index';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nlet store = createStore(reducer, compose(applyMiddleware(logger), composeWithDevTools()));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}